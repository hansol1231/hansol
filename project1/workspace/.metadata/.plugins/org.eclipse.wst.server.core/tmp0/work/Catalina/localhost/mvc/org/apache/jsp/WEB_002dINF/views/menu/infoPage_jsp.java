/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-02-25 12:57:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class infoPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/menu/../layout/footer.jsp", Long.valueOf(1582622365000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("시설 안내 페이지", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"map\" class=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=735685ac942446d3e4c20bea3b26d1c2\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    onload = function() {\r\n");
      out.write("        var position = new daum.maps.LatLng(37.568204, 126.897293);\r\n");
      out.write("        var map = new daum.maps.Map(document.getElementById('map'), {\r\n");
      out.write("            center: position,\r\n");
      out.write("            level: 4,\r\n");
      out.write("            mapTypeId: daum.maps.MapTypeId.ROADMAP\r\n");
      out.write("        });\r\n");
      out.write("        var marker = new daum.maps.Marker({\r\n");
      out.write("            position: position\r\n");
      out.write("        });\r\n");
      out.write("        marker.setMap(map);\r\n");
      out.write("        var iwContent = '<p style=\"width:200px\"><b>상암 월드컵경기장</b><br>서울특별시 마포구 성산동</p>';\r\n");
      out.write("        iwPosition = new daum.maps.LatLng(37.568204, 126.897293);\r\n");
      out.write("        iwRemoveable = true;\r\n");
      out.write("\r\n");
      out.write("        var infowindow = new daum.maps.InfoWindow({\r\n");
      out.write("            position: iwPosition,\r\n");
      out.write("            content: iwContent,\r\n");
      out.write("            removable: iwRemoveable\r\n");
      out.write("        });\r\n");
      out.write("        daum.maps.event.addListener(marker, 'click', function() {\r\n");
      out.write("            infowindow.open(map, marker);\r\n");
      out.write("        });\r\n");
      out.write("        var zoomControl = new daum.maps.ZoomControl();\r\n");
      out.write("        map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);\r\n");
      out.write("        var mapTypeControl = new daum.maps.MapTypeControl();\r\n");
      out.write("        map.addControl(mapTypeControl, daum.maps.ControlPosition.TOPRIGHT);\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"map_text1\">\r\n");
      out.write("    <h3>\r\n");
      out.write("        위치안내\r\n");
      out.write("    </h3>\r\n");
      out.write("    <pre>\t\t<b>지하철을 이용하시는 경우</b> \r\n");
      out.write("\t\t6호선 월드컵경기장역 2번 출구, \r\n");
      out.write("\t\t<b>버스를 이용하시는 경우</b> \r\n");
      out.write("\t\t710번(간선), 7019번(지선), 7715번(지선) \r\n");
      out.write("\t\t월드컵경기장 서측 정류소(번호:14-105)\r\n");
      out.write("\t\t하차하시는 것이 가장 빠르게 도착하실 수 있습니다.\r\n");
      out.write("\t\t<b>도로명 주소 : 서울시 마포구 월드컵로 240</b></pre>\r\n");
      out.write("    <h3>\r\n");
      out.write("        지하철 안내\r\n");
      out.write("    </h3>\r\n");
      out.write("    <pre>\t\t6호선 월드컵경기장역 1번출구</pre>\r\n");
      out.write("    <h3>\r\n");
      out.write("        버스 안내\r\n");
      out.write("    </h3>\r\n");
      out.write("    <pre>\t\t마을 : 마포08\r\n");
      out.write("\t\t일반 : 733\r\n");
      out.write("\t\t지선 : 7011, 7013A, 7715, 7013B, 7019, 7715\r\n");
      out.write("\t\t간선 : 271, 571, 710\r\n");
      out.write("\t\t광역 : 9711A</pre>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"map_text\">\r\n");
      out.write("    <h4>지도 위에 마우스 스크롤해서 확대/축소</h4>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"map_text2\">\r\n");
      out.write("    <h3>\r\n");
      out.write("        자가용안내\r\n");
      out.write("    </h3>\r\n");
      out.write("    <pre>\r\n");
      out.write("\t\t<b>고양, 은평 등 서북부지역</b>\r\n");
      out.write("\t\t수색로 증산교차로에서 피턴한 월드컵터널을 통과 증산 교차로를 지나 사천고가 앞에서 좌회전해서 성산로 방향으로 피턴합니다. \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>성북, 강북, 노원, 도봉 지역</b>\r\n");
      out.write("\t\t사천고가 성산로에 진입한 뒤 상암동길을 타는 방법, 성산로에서 합정로와 만나는 지점까지 직진해 우회전하는 방법이 있습니다.\r\n");
      out.write("\t\t내부순환로 차량은 성산램프에서 빠져나와 이용하거나 자유로 방면 램프로 나와 우회전하면 경기장 서문에 닿습니다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>종로, 중구, 서대문 등 도심 지역</b>\r\n");
      out.write("\t\t사천고가를 이용해 성산로에서 상암동 길을 타는 서교로를 이용하거나 수색로 증산 교차로에서 피턴하는 방법을 이용해도 됩니다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>영등포, 동작, 관악 등 남서부 지역</b>\r\n");
      out.write("\t\t성산대교를 건너 성산로에 진입해 직진하다 좌회전 하면 경기장 남문에 닿습니다.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>서초, 강남, 송파 등 강남지역</b>\r\n");
      out.write("\t\t강변 북로를 타던 차량은 성산대교와 내부 순환로 진입램프를 지나 바로 우회전 하면 현재 문을 열고 있는 서문을 만납니다.\r\n");
      out.write("\t\t<b>일산, 파주, 김포 및 남부 지역</b>\r\n");
      out.write("\t\t가양대교와 가양대교 나들목을 통해 난지도길을 이용합니다.\r\n");
      out.write("\t</pre>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"footer\" style=\"position: absolute; width: 100%;\">\r\n");
      out.write("    <h4>약관 | 개인정보 | 저작권</h4>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
