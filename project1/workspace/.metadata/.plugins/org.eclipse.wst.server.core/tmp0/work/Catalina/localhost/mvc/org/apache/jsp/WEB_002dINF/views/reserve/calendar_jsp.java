/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-02-25 13:08:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.reserve;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class calendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1582621307568L));
    _jspx_dependants.put("jar:file:/Users/parkhansol/Desktop/spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/team/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/reserve/../layout/footer.jsp", Long.valueOf(1582622365000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("달력", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/69d88719f9.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var today = new Date(); //오늘 날짜//내 컴퓨터 로컬을 기준으로 today에 Date 객체를 넣어줌\r\n");
      out.write("    var date = new Date(); //today의 Date를 세어주는 역할\r\n");
      out.write("    function prevCalendar() { //이전 달\r\n");
      out.write("        today = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\r\n");
      out.write("        buildCalendar(); //달력 cell 만들어 출력 \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function nextCalendar() { //다음 달\r\n");
      out.write("        today = new Date(today.getFullYear(), today.getMonth() + 1, today.getDate());\r\n");
      out.write("        buildCalendar(); //달력 cell 만들어 출력\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function buildCalendar() { //현재 달 달력 만들기\r\n");
      out.write("        var doMonth = new Date(today.getFullYear(), today.getMonth(), 1);\r\n");
      out.write("        var lastDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);\r\n");
      out.write("        var tbCalendar = document.getElementById(\"calendar\");\r\n");
      out.write("        var tbCalendarYM = document.getElementById(\"tbCalendarYM\");\r\n");
      out.write("        tbCalendarYM.innerHTML = today.getFullYear() + \"년 \" + (today.getMonth() + 1) + \"월\";\r\n");
      out.write("\r\n");
      out.write("        while (tbCalendar.rows.length > 2) {\r\n");
      out.write("            tbCalendar.deleteRow(tbCalendar.rows.length - 1);\r\n");
      out.write("        }\r\n");
      out.write("        var row = null;\r\n");
      out.write("        row = tbCalendar.insertRow();\r\n");
      out.write("        var cnt = 0; // count, 셀의 갯수를 세어주는 역할\r\n");
      out.write("        for (i = 0; i < doMonth.getDay(); i++) {\r\n");
      out.write("            cell = row.insertCell(); //열 한칸한칸 계속 만들어주는 역할\r\n");
      out.write("            cnt = cnt + 1; //열의 갯수를 계속 다음으로 위치하게 해주는 역할\r\n");
      out.write("        }\r\n");
      out.write("        for (i = 1; i <= lastDate.getDate(); i++) {\r\n");
      out.write("            cell = row.insertCell(); //열 한칸한칸 계속 만들어주는 역할\r\n");
      out.write("            cell.innerHTML = \"<span class='info' style='font-size:17px; font-weight:bold'>\" + i + \"일 \" + \"예약현황</span><br><br><span style='font-size:14px; color:red;'>예약 기간이 아닙니다.</span><br>\";\r\n");
      out.write("\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("            /*\r\n");
      out.write("            cell.innerHTML += \"<a href='goReserve?iMonth=\" + (today.getMonth()+1) + \"&iTime=1&iDay=\" + i + \"'>12:00~14:00</a><br>\";\r\n");
      out.write("            cell.innerHTML += \"<a href='goReserve?iMonth=\" + (today.getMonth()+1) + \"&iTime=2&iDay=\" + i + \"'>14:00~16:00</a><br>\";\r\n");
      out.write("            cell.innerHTML += \"<a href='goReserve?iMonth=\" + (today.getMonth()+1) + \"&iTime=3&iDay=\" + i + \"'>16:00~18:00</a><br>\";\r\n");
      out.write("            */\r\n");
      out.write("            cnt = cnt + 1; //열의 갯수를 계속 다음으로 위치하게 해주는 역할\r\n");
      out.write("            if (cnt % 7 == 1) {\r\n");
      out.write("                /*일요일 계산*/\r\n");
      out.write("                cell.innerHTML = \"<font color=red>\" + i\r\n");
      out.write("            }\r\n");
      out.write("            if (cnt % 7 == 0) {\r\n");
      out.write("                /* 1주일이 7일 이므로 토요일 구하기*/\r\n");
      out.write("                cell.innerHTML = \"<font color=blue>\" + i\r\n");
      out.write("                row = calendar.insertRow();\r\n");
      out.write("            }\r\n");
      out.write("            if (today.getFullYear() == date.getFullYear() &&\r\n");
      out.write("                today.getMonth() == date.getMonth() &&\r\n");
      out.write("                i == date.getDate()) {\r\n");
      out.write("                cell.bgColor = \"#FAF58C\"; //셀의 배경색을 노랑으로 \r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"cal_t\">\r\n");
      out.write("    <h1>예약</h1>\r\n");
      out.write("    <div style=\"text-align: right; padding-right: 130px;\">\r\n");
      out.write("        <span style=\"color: red; font-weight: bold; font-size: 18px; text-align: left; padding-right: 100px;\">당일 예약은 불가합니다. 여유있는 날짜를 선택하세요.</span>\r\n");
      out.write("        <span style=\"color: blue; font-weight: bold; font-size: 18px;\">예약 가능</span>&nbsp;|&nbsp;\r\n");
      out.write("        <span style=\"color: red; font-weight: bold; font-size: 18px;\">예약 불가능</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <table id=\"calendar\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <!-- label은 마우스로 클릭을 편하게 해줌 -->\r\n");
      out.write("            <td style=\"vertical-align: middle;\">\r\n");
      out.write("                <label onclick=\"prevCalendar()\">\r\n");
      out.write("                    <span style=\"font-size: 30px; padding: 10px; font-weight:bold;\"><i class=\"fas fa-backward\"></i></span>\r\n");
      out.write("                </label>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td style=\"font-weight:bold; font-size: 30px; padding: 10px; vertical-align: middle;\" id=\"tbCalendarYM\" colspan=\"5\">\r\n");
      out.write("                yyyy년 m월\r\n");
      out.write("            </td>\r\n");
      out.write("            <td style=\"vertical-align: middle;\">\r\n");
      out.write("                <label onclick=\"nextCalendar()\">\r\n");
      out.write("                    <span style=\"font-size: 30px; padding: 10px; font-weight:bold;\"><i class=\"fas fa-forward\"></i></span>\r\n");
      out.write("                </label>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px; color: red;\">일</td>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px\">월</td>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px\">화</td>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px\">수</td>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px\">목</td>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px\">금</td>\r\n");
      out.write("            <td style=\"text-align: center; font-size: 20px; color: blue;\">토</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        buildCalendar(); //\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"footer\" style=\"position: absolute; width: 100%;\">\r\n");
      out.write("    <h4>약관 | 개인정보 | 저작권</h4>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/reserve/calendar.jsp(46,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("iDto");
      // /WEB-INF/views/reserve/calendar.jsp(46,12) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/reserve/calendar.jsp(46,12) '${iList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${iList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                var iTime = '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${iDto.iTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("';\r\n");
            out.write("            var iMonth = '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${iDto.iMonth}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("';\r\n");
            out.write("            var iDay = '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${iDto.iDay}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("';\r\n");
            out.write("            var iReserve = '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${iDto.iReserve}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("';\r\n");
            out.write("\r\n");
            out.write("            if (iMonth == (today.getMonth() + 1) && iDay == i) {\r\n");
            out.write("                if (i > iDay) {\r\n");
            out.write("                    cell.innerHTML = \"<span class='info' style='font-size:17px; font-weight:bold'>\" + i + \"일 \" + \"예약현황</span><br><br><span style='font-size:17px; color:red;'>예약 기한 만료</span><br>\";\r\n");
            out.write("                } else {\r\n");
            out.write("                    if (iTime == 1 && iReserve == 'yes') {\r\n");
            out.write("                        cell.innerHTML = \"<span class='info' style='font-size:17px; font-weight:bold'>\" + i + \"일 \" + \"예약현황</span><br><br><span style='font-size:15px; color:red; letter-spacing: 1px;'>12:00~14:00 마감</span><br/>\";\r\n");
            out.write("                    } else if (iTime == 2 && iReserve == 'yes') {\r\n");
            out.write("                        cell.innerHTML += \"<span style='font-size:15px; color:red; letter-spacing: 1px;'>14:00~16:00 마감</span><br/>\";\r\n");
            out.write("                    } else if (iTime == 3 && iReserve == 'yes') {\r\n");
            out.write("                        cell.innerHTML += \"<span style='font-size:15px; color:red; letter-spacing: 1px;'>16:00~18:00 마감</span><br/>\";\r\n");
            out.write("                    } else if (iTime == 1 && iReserve == 'sby') {\r\n");
            out.write("                        cell.innerHTML = \"<span class='info' style='font-size:17px; font-weight:bold'>\" + i + \"일 \" + \"예약현황</span><br><br><span style='font-size:15px; color:grey; letter-spacing: 1px;'>12:00~14:00 대기</span><br/>\";\r\n");
            out.write("                    } else if (iTime == 2 && iReserve == 'sby') {\r\n");
            out.write("                        cell.innerHTML += \"<span style='font-size:15px; color:grey; letter-spacing: 1px;'>14:00~16:00 대기</span><br/>\";\r\n");
            out.write("                    } else if (iTime == 3 && iReserve == 'sby') {\r\n");
            out.write("                        cell.innerHTML += \"<span style='font-size:15px; color:grey; letter-spacing: 1px;'>16:00~18:00 대기</span><br/>\";\r\n");
            out.write("                    } else if (iTime == 1 && iReserve == 'no') {\r\n");
            out.write("                        cell.innerHTML = \"<span class='info' style='font-size:17px; font-weight:bold'>\" + i + \"일 \" + \"예약현황</span><br><br><a style='font-size:15px; text-decoration:none; color:blue; letter-spacing: 1px;' href='goReserve?iMonth=\" + (today.getMonth() + 1) + \"&iTime=1&iDay=\" + i + \"'>12:00~14:00 가능</a><br>\";\r\n");
            out.write("                    } else if (iTime == 2 && iReserve == 'no') {\r\n");
            out.write("                        cell.innerHTML += \"<a style='font-size:15px; text-decoration:none; color:blue; letter-spacing: 1px;' href='goReserve?iMonth=\" + (today.getMonth() + 1) + \"&iTime=2&iDay=\" + i + \"'>14:00~16:00 가능</a><br>\";\r\n");
            out.write("                    } else if (iTime == 3 && iReserve == 'no') {\r\n");
            out.write("                        cell.innerHTML += \"<a style='font-size:15px; text-decoration:none; color:blue; letter-spacing: 1px;' href='goReserve?iMonth=\" + (today.getMonth() + 1) + \"&iTime=3&iDay=\" + i + \"'>16:00~18:00 가능</a><br>\";\r\n");
            out.write("                    } \r\n");
            out.write("                }\r\n");
            out.write("            }\r\n");
            out.write("\r\n");
            out.write("            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
