/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-02-25 11:53:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/login/../layout/footer.jsp", Long.valueOf(1582622365000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("로그인페이지", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    window.onload = function() {\r\n");
      out.write("        var isModify = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isModify}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("        var isLeave = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isLeave}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("        var isChangePw = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isChangePw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("        if (isModify == \"yes\") {\r\n");
      out.write("            var modifyResult = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${modifyResult}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("            if (modifyResult == 0) {\r\n");
      out.write("                swal(\"회원정보 수정 실패\", \"관리자에게 문의바랍니다.\", \"error\");\r\n");
      out.write("            } else {\r\n");
      out.write("                swal(\"회원정보 수정 성공\", \"다시 로그인 하세요!\", \"success\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        if (isLeave == \"yes\") {\r\n");
      out.write("            var leaveResult = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${leaveResult}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("            if (leaveResult == 0) {\r\n");
      out.write("                swal(\"회원 탈퇴 실패\", \"관리자에게 문의바랍니다.\", \"error\");\r\n");
      out.write("            } else {\r\n");
      out.write("                swal(\"회원 탈퇴 성공\", \"이용해주셔서 감사합니다!\", \"success\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        if (isChangePw == \"yes\") {\r\n");
      out.write("        \tvar changePwResult = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${changePwResult}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("        \tif(changePwResult == 0) {\r\n");
      out.write("        \t\tswal(\"비밀번호 수정 실패\", \"관리자에게 문의바랍니다.\", \"error\");\r\n");
      out.write("        \t} else {\r\n");
      out.write("        \t\tswal(\"비밀번호 수정 성공\", \"다시 로그인 하세요!\", \"success\");\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 1. 로그인\r\n");
      out.write("    function login(f) {\r\n");
      out.write("        if (f.userId.value == \"\") {\r\n");
      out.write("            alert(\"아이디를 입력하세요.\");\r\n");
      out.write("            f.userId.focus();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        if (f.userPw.value == \"\") {\r\n");
      out.write("            alert(\"패스워드를 입력하세요.\");\r\n");
      out.write("            f.userPw.focus();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        f.action = \"login\";\r\n");
      out.write("        f.submit();\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 2. 아이디 기억하기\r\n");
      out.write("    // 페이지 로드 이벤트\r\n");
      out.write("    $(function() {\r\n");
      out.write("        // 1. 아이디 기억하기\r\n");
      out.write("        var saveId = getCookie(\"saveId\"); // 저장된 쿠키값(saveId)을 가져와서 userId 입력상자를 채워 넣음\r\n");
      out.write("        $(\"#userId\").val(saveId);\r\n");
      out.write("\r\n");
      out.write("        if ($(\"#userId\").val() != \"\") { // userId 입력상자가 이미 입력된 상태라면 예전에 '아이디 기억하기'를 체크한 상황\r\n");
      out.write("            $(\"#saveIdCheck\").attr(\"checked\", true); // 계속 '아이디 기억하기'를 체크 상태로 두기\r\n");
      out.write("        }\r\n");
      out.write("        $(\"#saveIdCheck\").change(function() { // '아이디 기억하기' 상태값에 변화가 생기면\r\n");
      out.write("            if ($(\"#saveIdCheck\").is(\":checked\")) { // 1) 체크한 경우\r\n");
      out.write("                setCookie(\"saveId\", $(\"#userId\").val(), 7); // 7일간 쿠키에 보관하는 setCookie() 함수 호출\r\n");
      out.write("            } else { // 2) 체크 해제한 경우\r\n");
      out.write("                deleteCookie(\"saveId\"); // 쿠키를 삭제하는 deleteCookie() 함수 호출 \r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $(\"#userId\").keyup(function() { // userId 값을 입력할 때\r\n");
      out.write("            if ($(\"#saveIdCheck\").is(\":checked\")) { // '아이디 기억하기'를 체크했다면\r\n");
      out.write("                setCookie(\"saveId\", $(\"#userId\").val(), 7); // 7일간 쿠키에 보관하는 setCookie 호출\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("    // 1. 쿠키 만들기\r\n");
      out.write("    function setCookie(cookieName, value, exdays) {\r\n");
      out.write("        var exdate = new Date();\r\n");
      out.write("        exdate.setDate(exdate.getDate() + exdays);\r\n");
      out.write("        var cookieValue = escape(value) + ((exdays == null) ? \"\" : \"; expires=\" + exdate.toGMTString());\r\n");
      out.write("        document.cookie = cookieName + \"=\" + cookieValue;\r\n");
      out.write("    }\r\n");
      out.write("    // 2. 쿠키 삭제\r\n");
      out.write("    function deleteCookie(cookieName) {\r\n");
      out.write("        var expireDate = new Date();\r\n");
      out.write("        expireDate.setDate(expireDate.getDate() - 1);\r\n");
      out.write("        document.cookie = cookieName + \"= \" + \"; expires=\" + expireDate.toGMTString();\r\n");
      out.write("    }\r\n");
      out.write("    // 3. 쿠키 가져오기\r\n");
      out.write("    function getCookie(cookieName) {\r\n");
      out.write("        cookieName = cookieName + \"=\";\r\n");
      out.write("        var cookieData = document.cookie;\r\n");
      out.write("        var start = cookieData.indexOf(cookieName);\r\n");
      out.write("        var cookieValue = \"\";\r\n");
      out.write("        if (start != -1) {\r\n");
      out.write("            start += cookieName.length;\r\n");
      out.write("            var end = cookieData.indexOf(\";\", start);\r\n");
      out.write("            if (end == -1) {\r\n");
      out.write("                end = cookieData.length;\r\n");
      out.write("            }\r\n");
      out.write("            cookieValue = cookieData.substring(start, end);\r\n");
      out.write("        }\r\n");
      out.write("        return unescape(cookieValue);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"login_t\">\r\n");
      out.write("    <div class=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\r\n");
      out.write("        <div class=\"panel panel-info\">\r\n");
      out.write("            <div class=\"panel-heading\">\r\n");
      out.write("                <div class=\"panel-title\">Welcome!</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"panel-body\">\r\n");
      out.write("                <form id=\"login-form\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" style=\"text-align: center; width: 100%;\" name=\"userId\" id=\"userId\" placeholder=\"아이디\" autofocus>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" style=\"text-align: center; width: 100%;\" name=\"userPw\" id=\"userPw\" placeholder=\"패스워드\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"checkbox\">\r\n");
      out.write("\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"checkbox\" name=\"saveIdCheck\" id=\"saveIdCheck\" value=\"true\" checked />아이디 기억하기\r\n");
      out.write("\t\t\t\t\t\t&nbsp;&nbsp;<input type=\"button\" value=\"로그인\" onclick=\"login(this.form)\" class=\"btn btn-default\"/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"searchIdPage\" style=\"text-decoration: none;\">아이디 찾기</a>\r\n");
      out.write("\t\t\t\t\t\t&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<a href=\"searchPwPage\" style=\"text-decoration: none;\">패스워드 찾기</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"footer\" style=\"position: absolute; width: 100%;\">\r\n");
      out.write("    <h4>약관 | 개인정보 | 저작권</h4>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
